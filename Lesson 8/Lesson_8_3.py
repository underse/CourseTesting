"""
     Урок 8. 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить работу исключения на реальном примере.
     Запрашивать у пользователя данные и заполнять список необходимо только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class ErrorNotDigit(Exception):
    def __init__(self, text):
        self.txt = text


def main():
    l = []
    while True:

        a = input('\nВведите следующий элемент списка (для прекращения наберите "stop"): ')
        if a == 'stop':
            print('STOP. Прекращение работы.')
            break

        try:
            if a.isdigit():
                # print('Digit!')
                l.append(int(a))
                # print(l)
            else:
                raise ErrorNotDigit('Error! Allowed only digits.')

        except ErrorNotDigit as err:
            print(err)
        print(l)

    print(l)


if __name__ == '__main__':
    main()
